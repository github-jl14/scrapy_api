name: Scrape Articles and Create Markdown

on:
  schedule:
    - cron: '0 8 * * *' # Runs at 08:00 PST
    - cron: '0 20 * * *' # Runs at 20:00 PST
  workflow_dispatch: # Allows manual trigger of the workflow

jobs:
  scrape-and-create:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      # Run the scraping and markdown creation process
      - name: Run scraping scripts
        run: |
          python scrape.py

      # Run the markdown creation process
      - name: Run MD generation scripts
        run: |
          python createMD.py

      # Determine run context
      - name: Determine run context
        id: run_context
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "run_context=Manual Trigger" >> $GITHUB_ENV
          else
            current_hour=$(date +'%H')
            if [ "$current_hour" -ge 8 ] && [ "$current_hour" -lt 9 ]; then
              echo "run_context=First Run" >> $GITHUB_ENV
            elif [ "$current_hour" -ge 20 ] && [ "$current_hour" -lt 21 ]; then
              echo "run_context=Second Run" >> $GITHUB_ENV
            else
              echo "run_context=Unknown Run" >> $GITHUB_ENV
            fi
          fi

      # Commit files
      - name: Commit files
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add articles/* inq_editorial.json images/*
          git commit -m "UPDATE DATA: $(date +'%b. %d, %Y (%a) %I:%M:%S %p') UTC ($RUN_CONTEXT)"
          git push
        env:
          RUN_CONTEXT: ${{ env.run_context }}